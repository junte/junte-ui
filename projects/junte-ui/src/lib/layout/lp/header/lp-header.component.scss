@import 'jnt-variables';
@import 'jnt-functions';
@import 'jnt-hosts';
@import 'elements/icon/icon';
@import 'navigation/menu/menu';
@import 'layout/responsive/responsive';
@import 'layout/grid/container/container';
@import 'forms/button/button';

@mixin jnt-lp-header($passed: (), $context: null, $strategy: 'changes') {

  $defs: (
    position: fixed,
    background: (
      default: transparent,
      onScroll: $jnt-white-color
    ),
    padding: $jnt-gutter-large 0 $jnt-gutter-huge 0,
    mobile-padding: $jnt-gutter-big 0,
    height: $lp-header-height,
    mobile-height: $lp-header-height-mobile,
    z-index: 1,
    container-width: null,
    menu: (
      desktop: (
        top: (
          item: (
            color: $jnt-primary-color,
            text-transform: uppercase,
            font-weight: $jnt-font-weight-semi-bold,
            active: (
              color: $jnt-primary-light-color,
              underline: false
            ),
            padding: $jnt-gutter-small,
            hover: (
              background-color: rgba($jnt-highlight-background, .5)
            )
          )
        )
      ),
      mobile: (
        top: (
          item: (
            color: $jnt-primary-color,
            text-transform: uppercase,
            font-weight: $jnt-font-weight-semi-bold,
            active: (
              color: $jnt-white-color
            ),
            icon: (
              size: $jnt-font-size-normal
            ),
            padding: $jnt-gutter-small $jnt-gutter-normal
          )
        )
      ),
      burger: (
        icon: (
          size: 40px
        )
      )
    )
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $jnt-ng-deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  #{if($context, $context, $jnt-lp-header-host)} {
    @if $declare {
      display: flex;
      box-sizing: border-box;
      top: 0;
      left: 0;
      right: 0;
      z-index: 3;
      transition: background-color .5s ease;
    }
    @if map-has-key($vars, background) {
      $bg: map-get($vars, background);
      background-color: map-get($bg, default);
    }

    @if map-get($vars, position) == fixed {
      &[data-scrolled=true] {
        @if map-has-key($vars, background) {
          $bg: map-get($vars, background);
          background-color: map-get($bg, onScroll);
        }
      }
    }
    padding: map-get($vars, padding);
    min-height: map-get($vars, height);
    height: map-get($vars, height);
    position: map-get($vars, position);

    @include max-for-tablet() {
      min-height: map-get($vars, mobile-height);
      height: map-get($vars, mobile-height);
      padding: map-get($vars, mobile-padding);
    }
  }

  #{$context} #{$wrapper} [data-container] {
    @include jnt-grid-container((width: map-get($vars, container-width)), '&') {
      display: flex;
      justify-content: space-between;
    }

    @include jnt-menu((top: (item: (color: $jnt-primary-color, text-transform: uppercase))));

    &[data-desktop] {
      [data-menu] {
        @if $declare {
          display: flex;
          align-items: center;
        }
        @if map-has-key($vars, menu) {
          $menu: map-get($vars, menu);
          @include jnt-menu((
            map-get($menu, desktop)
          ));
        }
      }
    }

    &[data-mobile] {
      [data-menu] {
        @if $declare {
          display: flex;
          align-items: center;
        }
        @if map-has-key($vars, menu) {
          $menu: map-get($vars, menu);
          @include jnt-menu((
            map-get($menu, mobile)
          ), '&');
        }
      }
    }
  }

  #{$context} #{$wrapper} [data-logo] {
    @if $declare {
      display: flex;
      align-items: center;
      margin-right: $jnt-gutter-huge;
      & > * {
        display: block;
      }
    }
  }

  #{$context} #{$wrapper} [data-burger] {
    @if map-has-key($vars, menu) {
      $menu: map-get($vars, menu);
      @if map-has-key($menu, burger) {
        $burger: map-get($menu, burger);
        @include jnt-button(($burger), '&');
      }
    }
  }

  #{$context} #{$wrapper} [data-actions] {
    @if $declare {
      margin-left: auto;
    }
  }

  #{$context} #{$wrapper} [data-content] {
    @if $declare {
      display: flex;
      align-items: center;
    }
  }
}

@if $jnt-debug {
  @debug 'lp-header compiled';
}
