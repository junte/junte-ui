@import 'jnt-variables';
@import 'jnt-functions';
@import 'jnt-utils';
@import 'jnt-hosts';
@import 'elements/icon/icon';
@import 'forms/button/button';

@mixin jnt-calendar($passed: (), $context: null, $strategy: 'changes') {

  $defs: (
    layout: fixed,
    day: (
      padding: null,
      selected: (
        background-color: null,
        color: null
      )
    ),
    metrics: (
      width: null
    )
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $jnt-ng-deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  #{if($context, $context, $jnt-calendar-host)} {
    @if $declare {
      @include reset-default();
      display: block;
      box-sizing: border-box;
      background-color: $jnt-primary-background;

      &[data-disabled='true'] {
        cursor: default;
        pointer-events: none;

        #{$wrapper} table {
          tbody tr td, th {
            color: $jnt-control-disabled-label-color;
            background-color: $jnt-control-disabled-background;
          }
        }
      }
    }
  }

  #{$wrapper} #{$context} table {
    table-layout: map-get($vars, layout);
    @if $declare {
      border-collapse: collapse;
      border-spacing: 0;
      width: 100%;
    }

    @if map-has-key($vars, metrics) and map-get(map-get($vars, metrics), width) {
      $metrics: map-get($vars, metrics);
      table-layout: fixed;
      [data-metrics] {
        width: map-get($metrics, width);
      }
    }

    [data-divider] {
      @if $declare {
        width: 2px;
      }
    }

    thead {

      [data-arrow], [data-date] {
        @if $declare {
          @include button-default();
        }
      }

      [data-date] {
        @if $declare {
          width: 100%;
        }
      }

      [data-year] {
        @if $declare {
          color: $jnt-control-disabled-label-color;
        }
      }

      [data-days] {
        > th {
          @if $declare {
            padding: $jnt-gutter-normal $jnt-gutter-tiny;
            color: $jnt-primary-text-light-color;
            font-weight: $jnt-font-weight-bold;
          }
        }
      }

      [data-metrics] {
        @if $declare {
          font-weight: $jnt-font-weight-semi-bold;
        }
      }

      th[data-metric] {
        @if $declare {
          font-weight: $jnt-font-weight-semi-bold;
        }
      }
    }

    tbody {
      tr {
        td {
          @if $declare {
            &[data-day] {
              box-shadow: inset -1px 0px 0px $jnt-highlight-background,
              inset 0px -1px 0px $jnt-highlight-background;

              &[data-selected-day='true'] {
                box-shadow: inset 0 0 0 2px $jnt-primary-light-color;
              }

              &:last-child {
                box-shadow: inset 0px -1px 0px $jnt-highlight-background;
              }
            }

            &[data-metric] {
              box-shadow: inset -1px 0px 0px $jnt-white-color,
              inset 0px -1px 0px $jnt-white-color;
            }
          }
        }

        &:last-child {
          @if $declare {
            td {
              &[data-day] {
                box-shadow: inset -1px 0px 0px $jnt-highlight-background;

                &:last-child {
                  box-shadow: none;
                }
              }

              &[data-metric] {
                box-shadow: inset -1px 0px 0px $jnt-white-color;
              }
            }
          }
        }

        &[data-current-week='true'] {
          @if $declare {
            [data-day][data-today='false'], [data-metric] {
              background-color: $jnt-highlight-background !important;
            }
          }
        }

        td {
          @if $declare {
            min-width: 38px;
            font-size: $jnt-font-size-small;
            box-sizing: border-box;
            user-select: none;
            padding: 0;
          }

          [data-default] {
            @if $declare {
              padding: $jnt-gutter-small $jnt-gutter-tiny;
            }
          }

          &[data-day] {
            @if $declare {
              cursor: pointer;

              &:nth-child(6),
              &:nth-child(7) {
                background-color: $jnt-secondary-background;
              }

              &[data-selected-day='false'][data-today='false']:hover,
              &[data-selected-month='false']:hover,
              &[data-selected-year='false']:hover {
                background-color: $jnt-secondary-background;
                color: $jnt-primary-text-dark-color;
              }

              &:focus {
                box-shadow: inset $jnt-outline-shadow-small $jnt-primary-light-color;
                outline: 0;
              }

              &[data-current-month='false'][data-today='false'] {
                color: $jnt-primary-text-light-color;

                > * {
                  opacity: .3;
                }
              }

              &[data-today='true'],
              &[data-day-extend][data-current-month='true'],
              &[data-year][data-current-year='true'] {
                background-color: $jnt-primary-light-color;
                color: $jnt-white-color;
              }

              &[data-day-extend] {
                height: 68px;
              }
            }

            @if map-has-key($vars, day) {
              $day: map-get($vars, day);
              padding: map-get($day, padding);
              &[data-selected-day='true'] {
                @if map-has-key($day, selected) {
                  $selected: map-get($day, selected);
                  background-color: map-get($selected, background-color);
                  color: map-get($selected, color);
                  [data-default] {
                    color: map-get($selected, color);
                  }
                }
              }
            }
          }

          &[data-metric] {
            @if $declare {
              background-color: $jnt-secondary-background;
            }
          }
        }
      }
    }

    td, th {
      @if $declare {
        vertical-align: middle;
        text-align: center;
        position: relative;
      }
    }
  }
}

@if $jnt-debug {
  @debug 'calendar compiled';
}
